pipeline {
    options {
        skipDefaultCheckout true
    }
    environment {
        baseURL = ""  // Inicializamos la variable que va a contener la URL de acceso a la API
    }
    agent any
    stages {
        stage('GetCode') {
            steps {
                echo "Limpio el workspace:"
                cleanWs()
                echo "Bajo el código del depósito de GitHub:"
                git branch: 'master', credentialsId: 'GitHubRW', url: 'https://github.com/unir-dbenach/todo-list-aws.git'
            }
        }
        
        stage ('Deploy') {
            steps {
                echo "Hago el despliegue en AWS"
                sh '''
                    sam build
                    sam deploy --config-env production --config-file samconfig.toml --on-failure ROLLBACK --resolve-s3 | tee samDeploy.log
                '''
                echo "Recupero la URL por donde se publica el servicio:"
                script {
                    baseURL = sh(script: '''
                        grep "amazonaws.com/" samDeploy.log | head -1 | awk '{print $2}'
                    ''', returnStdout: true).trim()
                }
            }
        }
        
        stage ('RestTest') {
            steps {
                echo "Lanzamos las pruebas de integración."
                sh """
                    export PYTHONPATH=${WORKSPACE}
                    export BASE_URL=${baseURL}
                    pytest -m inocuo --junit-xml=result-rest.xml test/integration/*
                """
               junit 'result-rest.xml'
            }
        }
        
    }

    post {
        always {
            script {
                echo "Ejecuto el post para limpiar la ejecución del pipeline (esta sección se ejecuta siempre aunque el build se marque como fallido):"
                echo "Elimino el stack de staging."
                sh '''
                    sam delete --config-env production --config-file samconfig.toml --no-prompts
                '''
                echo "Limpio el workspace."
                deleteDir()
            }
        }
    }
}
